apiVersion: v1
kind: Namespace
metadata:
  name: myapp-$ENV
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: users-deployment-$ENV
  namespace: myapp-$ENV
  labels:
    app: users-deployment
spec:
  replicas: 3
  selector:
    matchLabels:
      app: users-deployment-$ENV
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
      maxSurge: 1
  template:
    metadata:
      labels:
        app: users-deployment-$ENV
    spec:
      containers:
        - name: users
          image: <docker-image>
          env:
            - name: DB_HOST
              valueFrom:
                secretKeyRef:
                  name: db-credentials-$ENV
                  key: DB_HOST
            - name: DB_NAME
              valueFrom:
                secretKeyRef:
                  name: db-credentials-$ENV
                  key: DB_NAME
            - name: DB_USER
              valueFrom:
                secretKeyRef:
                  name: db-credentials-$ENV
                  key: DB_USER
            - name: DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: db-credentials-$ENV
                  key: DB_PASSWORD
          ports:
            - containerPort: 80
          resources:
            limits:
              cpu: 500m
              memory: 4Gi
            requests:
              cpu: 200m
              memory: 1Gi
          livenessProbe:
            httpGet:
              path: /health
              port: 80
            initialDelaySeconds: 5
            periodSeconds: 10
          readinessProbe:
            httpGet:
              path: /health
              port: 80
            initialDelaySeconds: 5
            periodSeconds: 10

        - name: node-exporter # for network-latency metrics
          image: prom/node-exporter:latest
          ports:
            - containerPort: 9100
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: shifts-deployment-$ENV
  namespace: myapp-$ENV
  labels:
    app: shifts-deployment-$ENV
spec:
  replicas: 3
  selector:
    matchLabels:
      app: shifts-$ENV
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
      maxSurge: 1
  template:
    metadata:
      labels:
        app: shifts-$ENV
    spec:
      containers:
        - name: shifts
          image: <docker-image>
          env:
            - name: DB_HOST
              valueFrom:
                secretKeyRef:
                  name: db-credentials-$ENV
                  key: DB_HOST
            - name: DB_NAME
              valueFrom:
                secretKeyRef:
                  name: db-credentials-$ENV
                  key: DB_NAME
            - name: DB_USER
              valueFrom:
                secretKeyRef:
                  name: db-credentials-$ENV
                  key: DB_USER
            - name: DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: db-credentials-$ENV
                  key: DB_PASSWORD
          ports:
            - containerPort: 80
          resources:
            limits:
              cpu: 500m
              memory: 4Gi
            requests:
              cpu: 200m
              memory: 1Gi
          livenessProbe:
            httpGet:
              path: /health
              port: 80
            initialDelaySeconds: 5
            periodSeconds: 10
          readinessProbe:
            httpGet:
              path: /health
              port: 80
            initialDelaySeconds: 5
            periodSeconds: 10

        - name: node-exporter # for network-latency metrics
          image: prom/node-exporter:latest
          ports:
            - containerPort: 9100